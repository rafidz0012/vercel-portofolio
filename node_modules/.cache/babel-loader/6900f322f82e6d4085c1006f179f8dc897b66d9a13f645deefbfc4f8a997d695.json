{"ast":null,"code":"var _jsxFileName = \"X:\\\\Web\\\\react\\\\memasak\\\\src\\\\Routes\\\\Ingredients.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport IngredientsCard from \"./IngredientsCard\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Ingredients = () => {\n  _s();\n  const [ingredients, setingredients] = useState([]);\n  useEffect(() => {\n    fetch(\"https://jsonplaceholder.typicode.com/posts\").then(res => res.json()).then(ingredients => {\n      setingredients(ingredients);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: ingredients.map(ingredients => /*#__PURE__*/_jsxDEV(IngredientsCard, {\n      ingredients: ingredients\n    }, ingredients.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n};\n_s(Ingredients, \"KQtDNF8NryjjQ1R8fVo6Ai2xkXw=\");\n_c = Ingredients;\nexport default Ingredients;\nvar _c;\n$RefreshReg$(_c, \"Ingredients\");","map":{"version":3,"names":["useEffect","useState","IngredientsCard","jsxDEV","_jsxDEV","Ingredients","_s","ingredients","setingredients","fetch","then","res","json","className","children","map","id","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["X:/Web/react/memasak/src/Routes/Ingredients.jsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport IngredientsCard from \"./IngredientsCard\";\r\n\r\nconst Ingredients = () => {\r\n  const [ingredients, setingredients] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetch(\"https://jsonplaceholder.typicode.com/posts\")\r\n      .then((res) => res.json())\r\n      .then((ingredients) => {\r\n        setingredients(ingredients);\r\n      });\r\n  }, []);\r\n  return (\r\n    <div className=\"container\">\r\n      {ingredients.map((ingredients) => (\r\n        <IngredientsCard ingredients={ingredients} key={ingredients.id} />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Ingredients;\r\n"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,OAAOC,eAAe,MAAM,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhD,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAElDD,SAAS,CAAC,MAAM;IACdS,KAAK,CAAC,4CAA4C,CAAC,CAChDC,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACzBF,IAAI,CAAEH,WAAW,IAAK;MACrBC,cAAc,CAACD,WAAW,CAAC;IAC7B,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EACN,oBACEH,OAAA;IAAKS,SAAS,EAAC,WAAW;IAAAC,QAAA,EACvBP,WAAW,CAACQ,GAAG,CAAER,WAAW,iBAC3BH,OAAA,CAACF,eAAe;MAACK,WAAW,EAAEA;IAAY,GAAMA,WAAW,CAACS,EAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAClE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACd,EAAA,CAjBID,WAAW;AAAAgB,EAAA,GAAXhB,WAAW;AAmBjB,eAAeA,WAAW;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}